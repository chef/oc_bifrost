%% -*- mode:erlang, erlang-indent-level: 4;indent-tabs-mode: nil -*-
{ping, <<"SELECT 'pong' AS ping LIMIT 1">>}.

%% Insertions for each authz_type
{insert_actor,
 <<"INSERT INTO auth_actor(authz_id)
    VALUES ($1)">>}.

{insert_container,
 <<"INSERT INTO container(authz_id)
    VALUES ($1)">>}.

{insert_group,
 <<"INSERT INTO auth_group(authz_id)
    VALUES ($1)">>}.

{insert_object,
 <<"INSERT INTO auth_object(authz_id)
    VALUES ($1)">>}.

%% Deletions for each authz_type
{delete_actor_by_authz_id,
 <<"DELETE FROM auth_actor
    WHERE authz_id = $1">>}.

{delete_container_by_authz_id,
 <<"DELETE FROM container
    WHERE authz_id = $1">>}.

{delete_group_by_authz_id,
 <<"DELETE FROM auth_group
    WHERE authz_id = $1">>}.

{delete_object_by_authz_id,
 <<"DELETE FROM auth_object
    WHERE authz_id = $1">>}.

%% Queries for existance for each authz_type
{actor_exists,
 <<"SELECT EXISTS(
      SELECT authz_id
      FROM auth_actor
      WHERE authz_id=$1
    ) AS exists">>}.

{group_exists,
 <<"SELECT EXISTS(
      SELECT authz_id
      FROM auth_group
      WHERE authz_id=$1
    ) AS exists">>}.

{container_exists,
 <<"SELECT EXISTS(
      SELECT authz_id
      FROM container
      WHERE authz_id=$1
    ) AS exists">>}.

{object_exists,
 <<"SELECT EXISTS(
      SELECT authz_id
      FROM auth_object
      WHERE authz_id=$1
    ) AS exists">>}.


%% Inserting actors and groups into ACLs
{insert_actor_acl_actor,
 <<"INSERT INTO actor_acl_actor(target, authorizee, permission)
    VALUES (actor_id($1), actor_id($2), $3)">>}.

{insert_actor_acl_group,
 <<"INSERT INTO actor_acl_group(target, authorizee, permission)
    VALUES (actor_id($1), group_id($2), $3)">>}.

{insert_group_acl_actor,
 <<"INSERT INTO group_acl_actor(target, authorizee, permission)
    VALUES (group_id($1), actor_id($2), $3)">>}.

{insert_group_acl_group,
 <<"INSERT INTO group_acl_group(target, authorizee, permission)
    VALUES (group_id($1), group_id($2), $3)">>}.

{insert_object_acl_actor,
 <<"INSERT INTO object_acl_actor(target, authorizee, permission)
    VALUES (object_id($1), actor_id($2), $3)">>}.

{insert_object_acl_group,
 <<"INSERT INTO object_acl_group(target, authorizee, permission)
    VALUES (object_id($1), group_id($2), $3)">>}.

{insert_container_acl_actor,
 <<"INSERT INTO container_acl_actor(target, authorizee, permission)
    VALUES (container_id($1), actor_id($2), $3)">>}.

{insert_container_acl_group,
 <<"INSERT INTO container_acl_group(target, authorizee, permission)
    VALUES (container_id($1), group_id($2), $3)">>}.

%% Retrieving lists actors and groups from ACLs (by permission)
{actors_in_actor_acl,
 <<"SELECT authz_id
    FROM auth_actor
    JOIN actor_acl_actor ON authorizee = auth_actor.id
    WHERE target = actor_id($1) AND permission = $2">>}.

{groups_in_actor_acl,
 <<"SELECT authz_id
    FROM auth_group
    JOIN actor_acl_group ON authorizee = auth_group.id
    WHERE target = actor_id($1) AND permission = $2">>}.

{actors_in_group_acl,
 <<"SELECT authz_id
    FROM auth_actor
    JOIN group_acl_actor ON authorizee = auth_actor.id
    WHERE target = group_id($1) AND permission = $2">>}.

{groups_in_group_acl,
 <<"SELECT authz_id
    FROM auth_group
    JOIN group_acl_group ON authorizee = auth_group.id
    WHERE target = group_id($1) AND permission = $2">>}.

{actors_in_object_acl,
 <<"SELECT authz_id
    FROM auth_actor
    JOIN object_acl_actor ON authorizee = auth_actor.id
    WHERE target = object_id($1) AND permission = $2">>}.

{groups_in_object_acl,
 <<"SELECT authz_id
    FROM auth_group
    JOIN object_acl_group ON authorizee = auth_group.id
    WHERE target = object_id($1) AND permission = $2">>}.

{actors_in_container_acl,
 <<"SELECT authz_id
    FROM auth_actor
    JOIN container_acl_actor ON authorizee = auth_actor.id
    WHERE target = container_id($1) AND permission = $2">>}.

{groups_in_container_acl,
 <<"SELECT authz_id
    FROM auth_group
    JOIN container_acl_group ON authorizee = auth_group.id
    WHERE target = container_id($1) AND permission = $2">>}.

%% Removing (all) actors and groups from ACLs (by permission)
{delete_actors_from_actor_acl,
 <<"DELETE FROM actor_acl_actor
    WHERE target = actor_id($1) AND permission = $2">>}.

{delete_groups_from_actor_acl,
 <<"DELETE FROM actor_acl_group
    WHERE target = actor_id($1) AND permission = $2">>}.

{delete_actors_from_group_acl,
 <<"DELETE FROM group_acl_actor
    WHERE target = group_id($1) AND permission = $2">>}.

{delete_groups_from_group_acl,
 <<"DELETE FROM group_acl_group
    WHERE target = group_id($1) AND permission = $2">>}.

{delete_actors_from_object_acl,
 <<"DELETE FROM object_acl_actor
    WHERE target = object_id($1) AND permission = $2">>}.

{delete_groups_from_object_acl,
 <<"DELETE FROM object_acl_group
    WHERE target = object_id($1) AND permission = $2">>}.

{delete_actors_from_container_acl,
 <<"DELETE FROM container_acl_actor
    WHERE target = container_id($1) AND permission = $2">>}.

{delete_groups_from_container_acl,
 <<"DELETE FROM container_acl_group
    WHERE target = container_id($1) AND permission = $2">>}.

%% Checking to see if actors have access on each authz_type
{actor_has_permission_on_actor,
 <<"SELECT actor_has_permission_on_actor AS permission
    FROM actor_has_permission_on_actor($1, $2, $3)">>}.

{actor_has_permission_on_group,
 <<"SELECT actor_has_permission_on_group AS permission
    FROM actor_has_permission_on_group($1, $2, $3)">>}.

{actor_has_permission_on_object,
 <<"SELECT actor_has_permission_on_object AS permission
    FROM actor_has_permission_on_object($1, $2, $3)">>}.

{actor_has_permission_on_container,
 <<"SELECT actor_has_permission_on_container AS permission
    FROM actor_has_permission_on_container($1, $2, $3)">>}.

%% Getting the actor and group members of groups
{group_actor_members,
 <<"SELECT authz_id
    FROM auth_actor
    JOIN group_actor_relations ON child = auth_actor.id
    WHERE parent = group_id($1)">>}.

{group_group_members,
 <<"SELECT authz_id
    FROM auth_group
    JOIN group_group_relations ON child = auth_group.id
    WHERE parent = group_id($1)">>}.

%% Adding actors and groups to groups
{insert_actor_into_group,
 <<"INSERT INTO group_actor_relations(child, parent)
    values (actor_id($1), group_id($2))">>}.

{insert_group_into_group,
 <<"INSERT INTO group_group_relations(child, parent)
    values (group_id($1), group_id($2))">>}.

%% Removing actors and groups from groups
{delete_actor_from_group,
 <<"DELETE FROM group_actor_relations
    WHERE child = actor_id($1) AND parent = group_id($2)">>}.

{delete_group_from_group,
 <<"DELETE FROM group_group_relations
    WHERE child = group_id($1) AND parent = group_id($2)">>}.
